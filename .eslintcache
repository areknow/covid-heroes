[{"/Users/arnaud.crowther/Documents/Development/sandbox/covid-heroes/src/index.tsx":"1","/Users/arnaud.crowther/Documents/Development/sandbox/covid-heroes/src/sections/cause/index.tsx":"2","/Users/arnaud.crowther/Documents/Development/sandbox/covid-heroes/src/sections/hero/index.tsx":"3","/Users/arnaud.crowther/Documents/Development/sandbox/covid-heroes/src/sections/footer/index.tsx":"4","/Users/arnaud.crowther/Documents/Development/sandbox/covid-heroes/src/sections/need/index.tsx":"5","/Users/arnaud.crowther/Documents/Development/sandbox/covid-heroes/src/sections/contact/index.tsx":"6","/Users/arnaud.crowther/Documents/Development/sandbox/covid-heroes/src/sections/donate/index.tsx":"7","/Users/arnaud.crowther/Documents/Development/sandbox/covid-heroes/src/components/button/index.tsx":"8","/Users/arnaud.crowther/Documents/Development/sandbox/covid-heroes/src/components/checkbox/index.tsx":"9","/Users/arnaud.crowther/Documents/Development/sandbox/covid-heroes/src/components/select/index.tsx":"10","/Users/arnaud.crowther/Documents/Development/sandbox/covid-heroes/src/components/nav/index.tsx":"11","/Users/arnaud.crowther/Documents/Development/sandbox/covid-heroes/src/components/radio/index.tsx":"12","/Users/arnaud.crowther/Documents/Development/sandbox/covid-heroes/src/components/page-column/index.tsx":"13"},{"size":508,"mtime":1608505653780,"results":"14","hashOfConfig":"15"},{"size":537,"mtime":1608666436998,"results":"16","hashOfConfig":"15"},{"size":873,"mtime":1608666327011,"results":"17","hashOfConfig":"15"},{"size":1280,"mtime":1608666585675,"results":"18","hashOfConfig":"15"},{"size":581,"mtime":1608666462650,"results":"19","hashOfConfig":"15"},{"size":631,"mtime":1608666490609,"results":"20","hashOfConfig":"15"},{"size":8644,"mtime":1608666436970,"results":"21","hashOfConfig":"15"},{"size":416,"mtime":1608601320238,"results":"22","hashOfConfig":"15"},{"size":498,"mtime":1608665579308,"results":"23","hashOfConfig":"15"},{"size":764,"mtime":1608652147573,"results":"24","hashOfConfig":"15"},{"size":331,"mtime":1608600578253,"results":"25","hashOfConfig":"15"},{"size":446,"mtime":1608665579308,"results":"26","hashOfConfig":"15"},{"size":206,"mtime":1608666279913,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jsrve6",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"43"},"/Users/arnaud.crowther/Documents/Development/sandbox/covid-heroes/src/index.tsx",[],"/Users/arnaud.crowther/Documents/Development/sandbox/covid-heroes/src/sections/cause/index.tsx",[],"/Users/arnaud.crowther/Documents/Development/sandbox/covid-heroes/src/sections/hero/index.tsx",[],"/Users/arnaud.crowther/Documents/Development/sandbox/covid-heroes/src/sections/footer/index.tsx",[],"/Users/arnaud.crowther/Documents/Development/sandbox/covid-heroes/src/sections/need/index.tsx",[],"/Users/arnaud.crowther/Documents/Development/sandbox/covid-heroes/src/sections/contact/index.tsx",[],"/Users/arnaud.crowther/Documents/Development/sandbox/covid-heroes/src/sections/donate/index.tsx",["57","58"],"import { useState } from 'react';\nimport styles from './index.module.scss';\nimport site from '../../data/site.json';\nimport Button from '../../components/button';\nimport Radio from '../../components/radio';\nimport Checkbox from '../../components/checkbox';\nimport Select from '../../components/select';\nimport PageColumn from '../../components/page-column';\n\nconst selectOptions = [\n  { value: 'AL', label: 'Alabama' },\n  { value: 'AK', label: 'Alaska' }\n];\n\nconst Donate = () => {\n  const [donate, toggleDonate] = useState(false);\n  const [request, toggleRequest] = useState(false);\n  const [volunteer, toggleVolunteer] = useState(false);\n  const [itemList, setItemList] = useState(site.content.sections.need.list);\n  const [form, setForm] = useState({\n    orgName: '',\n    firstName: '',\n    lastName: '',\n    phone: '',\n    email: '',\n    street: '',\n    city: '',\n    zip: ''\n  });\n\n  const handleSubmit = (event: any) => {\n    console.log(1);\n    event.preventDefault();\n  };\n\n  return (\n    <div id=\"donate\" className={'section ' + styles.donate}>\n      <PageColumn>\n        <h2 className=\"header\">{site.content.sections.donate.header}</h2>\n        <p>{site.content.sections.donate.paragraph}</p>\n      </PageColumn>\n      <div className={styles.formContainer}>\n        <PageColumn>\n          <form id=\"form\" onSubmit={handleSubmit}>\n            <div className={styles.block}>\n              <h3>\n                Are you donating medical equipment, or are you requesting it?\n              </h3>\n              <ul className={styles.list}>\n                <li>\n                  <Radio\n                    label=\"I have equipment to donate\"\n                    group=\"type\"\n                    change={() => {\n                      toggleRequest(false);\n                      toggleDonate(true);\n                    }}\n                  />\n                </li>\n                <li>\n                  <Radio\n                    label=\"I am requesting medical equipment\"\n                    group=\"type\"\n                    change={() => {\n                      toggleRequest(true);\n                      toggleDonate(false);\n                    }}\n                  />\n                </li>\n              </ul>\n            </div>\n            <div className={styles.block}>\n              <h3>\n                Are you interested in volunteering? please check the box below.\n              </h3>\n              <ul className={styles.list}>\n                <li>\n                  <Checkbox\n                    label=\"I am interested in being a volunteer. (if you don't have any PPEs or need any PPEs but still want to contribute in the logistics please check the box)\"\n                    value=\"volunteer\"\n                    change={() => {\n                      toggleVolunteer(true);\n                    }}\n                  />\n                </li>\n              </ul>\n            </div>\n            {(donate || request) && (\n              <div className={styles.block}>\n                <h3>\n                  Please fill out some basic information so we can get in touch.\n                </h3>\n                {JSON.stringify(form)}\n\n                {request && (\n                  <div className={styles.row}>\n                    <span className={styles.input}>\n                      <input\n                        placeholder=\"Organization Name\"\n                        type=\"text\"\n                        onChange={event => {\n                          setForm({ ...form, orgName: event.target.value });\n                        }}\n                      />\n                    </span>\n                  </div>\n                )}\n                <div className={styles.row}>\n                  <div className={styles.input}>\n                    <input\n                      required\n                      type=\"text\"\n                      placeholder=\"First Name\"\n                      autoComplete=\"given-name\"\n                      onChange={event => {\n                        setForm({ ...form, firstName: event.target.value });\n                      }}\n                    />\n                  </div>\n                  <div className={styles.input}>\n                    <input\n                      required\n                      type=\"text\"\n                      placeholder=\"Last Name\"\n                      autoComplete=\"family-name\"\n                      onChange={event => {\n                        setForm({ ...form, lastName: event.target.value });\n                      }}\n                    />\n                  </div>\n                  <div className={styles.input}>\n                    <input\n                      required\n                      type=\"tel\"\n                      autoComplete=\"tel\"\n                      pattern=\"^[0-9]{3,45}$\"\n                      placeholder=\"Phone Number\"\n                      onChange={event => {\n                        setForm({ ...form, phone: event.target.value });\n                      }}\n                    />\n                  </div>\n                </div>\n                <div className={styles.row}>\n                  <div className={styles.input}>\n                    <input\n                      required\n                      type=\"email\"\n                      placeholder=\"Email\"\n                      autoComplete=\"email\"\n                      onChange={event => {\n                        setForm({ ...form, email: event.target.value });\n                      }}\n                    />\n                  </div>\n                  <div className={styles.input}>\n                    <input\n                      type=\"text\"\n                      placeholder=\"Street Address\"\n                      autoComplete=\"street-address\"\n                      onChange={event => {\n                        setForm({ ...form, street: event.target.value });\n                      }}\n                    />\n                  </div>\n                </div>\n                <div className={styles.row}>\n                  <div className={styles.input}>\n                    <input\n                      type=\"text\"\n                      placeholder=\"City\"\n                      autoComplete=\"address-level2\"\n                      onChange={event => {\n                        setForm({ ...form, city: event.target.value });\n                      }}\n                    />\n                  </div>\n                  <span className={styles.input}>\n                    <Select\n                      options={selectOptions}\n                      autoComplete=\"address-level1\"\n                      name=\"state\"\n                      label=\"State\"\n                    />\n                  </span>\n                  <div className={styles.input}>\n                    <input\n                      type=\"text\"\n                      placeholder=\"Zip Code\"\n                      autoComplete=\"postal-code\"\n                      onChange={event => {\n                        setForm({ ...form, zip: event.target.value });\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            )}\n            {(donate || request) && (\n              <div className={styles.block}>\n                <h3>\n                  Please check the boxes indicating what items you are\n                  {request && ' requesting'}\n                  {donate && ' donating'}.\n                </h3>\n                <ul className={styles.list}>\n                  {itemList.map((item, index) => (\n                    <li key={index}>\n                      <Checkbox\n                        label={item.label}\n                        value={item.label}\n                        change={() => {\n                          item.checked = !item.checked;\n                        }}\n                      />\n                    </li>\n                  ))}\n                </ul>\n                <div className={styles.row}>\n                  <span className={styles.input}>\n                    <textarea\n                      rows={8}\n                      placeholder=\"Please let us know if you have other items you would like to donate.\"\n                      name=\"other\"\n                    ></textarea>\n                  </span>\n                </div>\n              </div>\n            )}\n            {(donate || request) && (\n              <Button>{{ label: 'SUBMIT', type: 'primary' }}</Button>\n            )}\n          </form>\n        </PageColumn>\n      </div>\n      <PageColumn>\n        <div className={styles.formError}>\n          An error occurred. Please refresh the page and try again.\n        </div>\n      </PageColumn>\n    </div>\n  );\n};\n\nexport default Donate;\n",["59","60"],"/Users/arnaud.crowther/Documents/Development/sandbox/covid-heroes/src/components/button/index.tsx",[],"/Users/arnaud.crowther/Documents/Development/sandbox/covid-heroes/src/components/checkbox/index.tsx",[],"/Users/arnaud.crowther/Documents/Development/sandbox/covid-heroes/src/components/select/index.tsx",[],"/Users/arnaud.crowther/Documents/Development/sandbox/covid-heroes/src/components/nav/index.tsx",[],"/Users/arnaud.crowther/Documents/Development/sandbox/covid-heroes/src/components/radio/index.tsx",[],"/Users/arnaud.crowther/Documents/Development/sandbox/covid-heroes/src/components/page-column/index.tsx",["61"],"import styles from './index.module.scss';\n\nconst PageColumn = ({ children }: { children: React.ReactNode }) => {\n  return <div className={styles.pageColumn}>{children}</div>;\n};\n\nexport default PageColumn;\n",{"ruleId":"62","severity":1,"message":"63","line":18,"column":10,"nodeType":"64","messageId":"65","endLine":18,"endColumn":19},{"ruleId":"62","severity":1,"message":"66","line":19,"column":20,"nodeType":"64","messageId":"65","endLine":19,"endColumn":31},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"62","severity":1,"message":"71","line":1,"column":10,"nodeType":"64","messageId":"65","endLine":1,"endColumn":20},"@typescript-eslint/no-unused-vars","'volunteer' is assigned a value but never used.","Identifier","unusedVar","'setItemList' is assigned a value but never used.","no-native-reassign",["72"],"no-negated-in-lhs",["73"],"'JsxElement' is defined but never used.","no-global-assign","no-unsafe-negation"]